package com.example.demo;


import com.example.demo.util.RSAUtils;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

public class testRSAUtils {


    @Test
    public void testCreate(){
        Map<String, String> objectObjectHashMap = new HashMap<>();
        objectObjectHashMap = RSAUtils.createRSAKeys();

        System.out.println(objectObjectHashMap);
    }



    @Test
    public void testEncrypt(){
        String password=null;
        password = RSAUtils.encryptByPublicKey("123456789","MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvfVJXndl3FIXSboLV9wza/yqSI86hG6vEGN1rGvtEh22nazzPUHx/D1I74mALx2xxR+OycNhgOOlh22R8sOR8uFnXyXLOd4az4jmb3/nv5UNGgIn5nBqzuBwjRl1sP44b7D2+w3LXkB7ntoLKRZ5b6eJSwjKUJ/5jAXOYNibQVBAOt0L8Wgmtw5LtpH9VYv9K3RYSHAnj5st4cYi9uZ/Rzh/EGfd3KznosYmtCQI9iPFRpL+MzB8EihD/wUgiKXx/6qmUWJgs+JJtqtKjibgGXMJkwk19rL4j5/S2E1Gd3cvexZz2s3b83XE+HOoNTnGi5qMB44JYVzJ5ZyLzYH5vQIDAQAB");

        System.out.println("pass:"+password);
        System.out.println("pass_len:"+password.length());
    }
    @Test
    public void testDecrpyt(){
        String password=null;
        password = RSAUtils.decryptByPrivateKey("QwvdxHsBmVrm5/vxai4PqHsqZdEzOC0WPip8pGI14vIHW2kjZh8Zez3qKBGm2/fE6+uZEmIt/+qqiBL0OJlliesai0VcVGEj6NXp+qL3kurXmAjuOlJNVIGgCdGtbw/dHePo15wPFzcZbyXOMVszw+fFaEcORNGfttx7+zGcYnRN4dIP3zb7B0THqRqMvC0TKIbwr646+g00PoJb1MyGDGRq6z3MqOUdGSICeEiDjWCZlkGVH2RYbOoOcgkjR5uvQREiKYFg4n9cDA/u6hVkZPVC6bhHGHAMN2n6j0l3C1C9HFgVxtc+lvlb0bBmD9XuCXu6KgA5zFr5KoQ1z9sJ5g==",
                "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC99Uled2XcUhdJugtX3DNr/KpIjzqEbq8QY3Wsa+0SHbadrPM9QfH8PUjviYAvHbHFH47Jw2GA46WHbZHyw5Hy4WdfJcs53hrPiOZvf+e/lQ0aAifmcGrO4HCNGXWw/jhvsPb7DcteQHue2gspFnlvp4lLCMpQn/mMBc5g2JtBUEA63QvxaCa3Dku2kf1Vi/0rdFhIcCePmy3hxiL25n9HOH8QZ93crOeixia0JAj2I8VGkv4zMHwSKEP/BSCIpfH/qqZRYmCz4km2q0qOJuAZcwmTCTX2sviPn9LYTUZ3dy97FnPazdvzdcT4c6g1OcaLmowHjglhXMnlnIvNgfm9AgMBAAECggEABkumztauLYsa8nqT/alymtWY3ybADbuNWcGyGLDK/pq1fqxIs3MIDhAJ5sZr1SPqzFmrZcxv4tGonsBm4eDRaXdG8cRS4+wUf2ROHsviZlsOQBpqMBzxrUGK+WIqoF8Mh8cZqGBgqRMCBdW8IPR5udWXm0EDU4C5yIY4vMTxAE0V8IK68ZbvwQHnY/vPArw7mSora3gBn5uUTYMSRjvoGbhIPW9aMCtazxJX7WNL8As6q5PhCL9rkTTBtjZ5EdA5HMPIAmZAbawBUJrDhESzm3fvjatRyjvSlaDQ8P0WoOpuaO8fM3HHI1/Q7MLufWTzIvZzFhmWLyqkC9JciYJgEQKBgQDor+WeWHdg9nDKHZSJuuasO8KRk3tcpEIUp8DPSQGEj4f+ic6mjBETsrBkKpym3nWxQkbXEiQyckazExjMW5xjbaR5i3Vhe/qCE9QNJF7MWjr3N6BBCzU/3xgzmJdCRJXJU1m583nKp6hOKrtaWXNrAwzV+7qFTfN0eOcVoiUo/wKBgQDQ/XN8LMF3+A0xswOy815SqEvfgDiNrPlnXAoRDN8L+DvSW0XQH2VCcZlp73ReZgop2CbV9wjzRkQ6S5tSulJJnx6ZbBU1cdfeql/ykOL299jz/qqNfPsIMcdv5AJv7Prv5RTfUUpVhXF+wBCN8B0K7MlYKXLVjHpmG1W2xiDBQwKBgCGl1fmI53JxEKxZjLJCAbtkROWSQyOJaTjdbUdMUljd/Jd1TBnPZWTI0TMa6l5DCxff8qiFKhDVb53TpCFhGgNSxpcA8K9xIy+OOHrSCJdacO5w786YFVIwK6rCZRUjH9nmILKAH9uLVQ5ApakSCFuwLDoBVd6TACKWnSwGr4L3AoGAM4kcjlV3C/92OXg8hEdxTg7ETwQObhlmky9mKBg1dH0tO01YpN7pGH5s52uuFY0yGml8Ai1d3qfIMVvtnHPn0NHVON4nSLufEQCQkn9aCK7LqDd3lVZpjPbBiH0AgNs+ciPahstD+lzixO/V5Tp93vDPIdduwuxWTpGVDHJFJ4MCgYEAgbJt+hAdt13zLk6Z2dLBtIFW4aGsrW0Nyfg6RjMeRWRGOm6qJhvggXHxhY32M+6FxpeHVrRhi9lAvQgvfy8iTmQJsaCw59Tmkpu1VcUfbPkGq2YzjnpliAou6xO7UYaEbOjUjMUDzABoZFuj85wApVHKIjVaGnkoniAWaoygKUo=");

        System.out.println(password);
    }
}

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